name: "run-maven"
description: "Run maven command"
inputs:
  phases:
    description: "Maven run phases: e.g. clean install"
    required: true
  profiles:
    description: "Maven profiles passed to -P parameter, e.g.: github"
    required: false
  parameters:
    description: "Maven parameters. e.g: -Dparam=value -Dparam2=value2"
    required: false
  threads:
    description: "Maven thread parameter: eg. 1.5C, 1C, 4. Default 1 thread pre CPU core"
    required: false
    default: "1C"
  save-cache:
    description: "If cache should be saved after maven run"
    required: false
    default: "true"
  build-modules:
    description: "Comma separated list of submodules which should be build (e.g. only changed modules), e.g: submodule,submodule/pom.xml"
    required: false
    default: ""
  build-dependant-modules:
    description: "Use [true] for argument _--also-make-dependents_, [false] for argument _--also-make_"
    required: false
    default: "true"
  jvm-options:
    description: "Maven Java virtual machine options"
    required: false
    default: ""

  maven-aws-profile:
    description: "Maven profile used for running maven job. Default is set, if using, in setup-maven-action"
    required: false
  plugins-aws-profile:
    description: "Maven profile used in maven plugins. Default is: maven-aws-profile"
    required: false

runs:
  using: "composite"
  steps:
    - name: Maven options
      shell: bash
      run: |
        MAVEN_OPTS="${{ inputs.jvm-options }}"
        if [[ ! "$MAVEN_OPTS" =~ .*"-Xmx".* ]]; then
          MEM_TOTAL=$(cat /proc/meminfo | grep MemTotal | awk '$3=="kB"{$2=int($2/1024); print $2}')
          MEM_SYSTEM=2048
          MEM_AVAILABLE=$(($MEM_TOTAL - $MEM_SYSTEM))

          CPU_TOTAL=$(cat /proc/cpuinfo | grep processor | wc -l)
          CPU_USED=${{ inputs.threads }}
          if [[ "$CPU_USED" =~ ^[0-9.]+[Cc]$ ]]; then
            CPU_USED=$CPU_TOTAL
          fi
          echo "CPU settings: total=${CPU_TOTAL}, used-for-calculation=${CPU_USED}"
        
          MEM_AVAILABLE=$(($MEM_AVAILABLE / $CPU_USED))
          echo "Memory settings: total=${MEM_TOTAL}MB, system=${MEM_SYSTEM}MB, available=${MEM_AVAILABLE}MB"

          MAVEN_OPTS="$MAVEN_OPTS -Xmx${MEM_AVAILABLE}m"
        fi
        echo "MAVEN_OPTS=$MAVEN_OPTS" >> $GITHUB_ENV

    - name: Prepare maven arguments
      shell: bash
      id: prepare_maven_arguments
      run: |
        if [[ ${{ inputs.build-dependant-modules }} == 'true' ]]; then
          echo "ADDITIONAL_MAVEN_ARGUMENTS=--also-make-dependents" >> $GITHUB_OUTPUT
        else
          echo "ADDITIONAL_MAVEN_ARGUMENTS=--also-make" >> $GITHUB_OUTPUT
        fi

    - name: '[DEPRECATED] Prepare credentials for plugins. Move to SDK 2'
      shell: bash
      id: prepare-plugins-credentials
      run: |
        ROLE_ARN=$(aws configure get role_arn --profile ${{ inputs.plugins-aws-profile || inputs.maven-aws-profile || env.MAVEN_AWS_PROFILE }})
        SOURCE_PROFILE=$(aws configure get source_profile --profile ${{ inputs.plugins-aws-profile || inputs.maven-aws-profile || env.MAVEN_AWS_PROFILE }})
        
        AWS_ACCESS_KEY_ID=$(aws configure get aws_access_key_id --profile ${SOURCE_PROFILE})
        AWS_SECRET_ACCESS_KEY=$(aws configure get aws_secret_access_key --profile ${SOURCE_PROFILE})
        AWS_SESSION_TOKEN=$(aws configure get aws_session_token --profile ${SOURCE_PROFILE})
        
        echo "role_arn=${ROLE_ARN}" >> $GITHUB_OUTPUT
        echo "aws_access_key_id=${AWS_ACCESS_KEY_ID}" >> $GITHUB_OUTPUT
        echo "aws_secret_access_key=${AWS_SECRET_ACCESS_KEY}" >> $GITHUB_OUTPUT
        echo "aws_session_token=${AWS_SESSION_TOKEN}" >> $GITHUB_OUTPUT

    - name: Run maven command
      shell: bash
      run: |
        mvn \
          -Pgithub,${{ inputs.profiles }} \
          ${{ inputs.parameters }} \
          -Duser.timezone="Europe/Amsterdam" \
          -DuseGitHub=true \
          ${{ steps.prepare_maven_arguments.outputs.ADDITIONAL_MAVEN_ARGUMENTS }} \
          --projects "${{ inputs.build-modules }}" \
          --threads ${{ inputs.threads }} \
          --update-snapshots \
          --batch-mode \
          --fail-at-end \
        ${{ inputs.phases }}
      env:
        MAVEN_AWS_PROFILE: ${{ inputs.maven-aws-profile || env.MAVEN_AWS_PROFILE }}
        PLUGINS_AWS_PROFILE: ${{ inputs.plugins-aws-profile || inputs.maven-aws-profile || env.MAVEN_AWS_PROFILE }}

        # necessary for "StsAssumeRoleCredentialsProvider"
        AWS_PROFILE: ${{ inputs.plugins-aws-profile || inputs.maven-aws-profile || env.MAVEN_AWS_PROFILE }}

        # DEPRECATED: Used for assuming role via env credentials provider in SDK 1
        AWS_ACCESS_KEY_ID: ${{ steps.prepare-plugins-credentials.outputs.aws_access_key_id }}
        AWS_SECRET_KEY: ${{ steps.prepare-plugins-credentials.outputs.aws_secret_access_key }}
        AWS_SESSION_TOKEN: ${{ steps.prepare-plugins-credentials.outputs.aws_session_token }}
        AWS_ASSUME_ROLE_ARN: ${{ steps.prepare-plugins-credentials.outputs.role_arn }}

    - name: Save Maven cache
      if: always() && inputs.save-cache == 'true'
      uses: skjolber/maven-cache-github-action@v2.0
      with:
        step: save
